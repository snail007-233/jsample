;服务器配置
[server]
;绑定的ip，所有ip就使用0.0.0.0
host=0.0.0.0
;绑定的端口
port = 8090
;是否使用https
https=false
;证书KeyStore路径
https_keystore_path=/home/pm/k/sslsocket.keystore
;证书KeyStore密码
https_cert_keystore_password=secret
;证书密码
https_cert_password=secret

;输出静态文件时使用的MIME类型
mime=default:application/octet-stream,html:text/html,php:text/plain,rmvb:video/rmvb,mkv:video/mkv
;Boss线程数
boss_thread=2
;Worker线程数
worker_thread=5

;默认域名配置
[default]
;自启动服务，格式：包名.类名.方法名,大小写敏感，服务器启动之后，会自动调用一次该方法
;之后运行中不会被再调用。不定义留空。
;方法无参数，无返回值,例子：public void auto() {...}
init=
;路由器，格式：包名.类名.方法名,大小写敏感，所有来自该域名的请求都会交给路由器，
;如果路由器返回true，就可以阻止系统默认路由处理。
;返回false系统路由器会继续处理请求。不定义留空
;方法例子：private boolean onRequest(SimpleResponse response, SimpleRequest request) {...｝
router=
;配置默认的包路径，注意最后一定要有.
base=wmq.servlets.
;域名默认执行的SimpleServlet，格式：类名.方法名,大小写敏感
;方法例子：public void onDefault(SimpleResponse response, SimpleRequest request)  {...｝
default=Mq.do_Default
;方法默认前缀
method_prefix=do_
;默认的SimpleServlet url后缀
url_subfix=.ssp
;默认全局是否启用Gzip压缩输出内容
gizp=false
;session的会话ID的cookie键名称
session_cookie_name=SSID
;session 存活时间，单位秒
session_alive_seconds=900
;session 存储方式，支持：1.memory（内存）
session_store_type=memory
;时区设置，整数:0-11，北京时区是8
time_zone=8
;缓存的静态文件的后缀列表，多个空格分割
http_file_cache_ext=html htm css js jpg png bmp gif 
;http静态文件缓存时间，单位秒
http_file_cache_seconds=300
;默认域名根目录
wwwroot=/none/
;是否打印详细错误信息
debug=true
;
;前端用nginx代理的时候，
;nginx需要设置X-Forward-For头部,包含真实的访问者IP。
;这样在代码中才能获得真实的客户端IP。
;为了安全，这里设置下受信任的nginx所在服务器的IP，多个空格分割。
;
proxy_server=

;全局错误日志记录类，如果不记录，留空即可，类需要实现接口com.snail.http.utils.ExceptionLogger
error_logger=wmq.util.AppLogger

;全局访问日志记录类，如果不记录，留空即可，类需要实现接口com.snail.http.utils.AccessLogger
access_logger=wmq.util.AppLogger

;=====下面是具体域名配置
;=====配置项如果没有设置(如果设置了但是值为空那么也算设置)
;=====那么使用default默认里面的配置项的设置
;下面是一个实例
;[example.com]
;init=com.test.servlets.DefaultServlet.auto
;router=com.test.servlets.DefaultServlet.router
;base=com.test.servlets.
;default=DefaultServlet.onRequest
;gizp=false
;session_cookie_name=SSD
;url_subfix=.so
;wwwroot=/home/www/example.com

;Nginx代理配置示例
;location ~ \.st {
;        proxy_set_header Host $host;
;        proxy_set_header X-Forward-For $remote_addr;
;        proxy_pass http://127.0.0.1:8080;
;   }

;[gitcode.com]
;init=com.test.servlets.DefaultServlet.auto
;router=com.test.servlets.DefaultServlet.router
;base=com.test.servlets.
;default=DefaultServlet.onRequest
;gizp=true
;url_subfix=.st
;wwwroot=/home/pm/
;proxy_server=127.0.0.1
